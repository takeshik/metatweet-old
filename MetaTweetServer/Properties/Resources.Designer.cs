//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XSpect.MetaTweet.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XSpect.MetaTweet.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code file &quot;{1}&quot; was compiled and executed in &quot;{0}&quot;.
        ///Module types declared in the code is loaded if exists..
        /// </summary>
        public static string CodeExecuted {
            get {
                return ResourceManager.GetString("CodeExecuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compiling Code file &quot;{1}&quot; in the domain &quot;{0}&quot;..
        /// </summary>
        public static string CodeExecuting {
            get {
                return ResourceManager.GetString("CodeExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilterFlow &quot;{0}&quot; finished to filter..
        /// </summary>
        public static string FilterFlowFilterFinished {
            get {
                return ResourceManager.GetString("FilterFlowFilterFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FilterFlow &quot;{0}&quot; started to filter.
        ///  Selector = {1}
        ///  Source = {2} elements
        ///  Storage = {3}
        ///  Arguments:
        ///{4}.
        /// </summary>
        public static string FilterFlowFilterStarted {
            get {
                return ResourceManager.GetString("FilterFlowFilterStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputFlow &quot;{0}&quot; finished to input..
        /// </summary>
        public static string InputFlowInputFinished {
            get {
                return ResourceManager.GetString("InputFlowInputFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to InputFlow &quot;{0}&quot; started to input.
        ///  Selector = {1}
        ///  Storage = {2}
        ///  Arguments:
        ///{3}.
        /// </summary>
        public static string InputFlowInputStarted {
            get {
                return ResourceManager.GetString("InputFlowInputStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New module object &quot;{2}&quot; was initialized as &quot;{1}&quot; in &quot;{0}&quot;.
        ///Configuration file &quot;{3}&quot; was loaded..
        /// </summary>
        public static string ModuleAdded {
            get {
                return ResourceManager.GetString("ModuleAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module assembly was resolved and loaded with the domain name &quot;{0}&quot;..
        /// </summary>
        public static string ModuleLoaded {
            get {
                return ResourceManager.GetString("ModuleLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module &quot;{1}&quot; named &quot;{2}&quot; in &quot;{0}&quot; was removed..
        /// </summary>
        public static string ModuleRemoved {
            get {
                return ResourceManager.GetString("ModuleRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module assembly &quot;{0}&quot; was unloaded..
        /// </summary>
        public static string ModuleUnloaded {
            get {
                return ResourceManager.GetString("ModuleUnloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OutputFlow &quot;{0}&quot; finished to output..
        /// </summary>
        public static string OutputFlowOutputFinished {
            get {
                return ResourceManager.GetString("OutputFlowOutputFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OutputFlow &quot;{0}&quot; started to output.
        ///  Selector = {1}
        ///  Source = {2} elements
        ///  Storage = {3}
        ///  Arguments:
        ///{4}
        ///  Output Type = {5}.
        /// </summary>
        public static string OutputFlowOutputStarted {
            get {
                return ResourceManager.GetString("OutputFlowOutputStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servant &quot;{0}&quot; was aborted..
        /// </summary>
        public static string ServantAborted {
            get {
                return ResourceManager.GetString("ServantAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servant &quot;{0}&quot; was aborting..
        /// </summary>
        public static string ServantAborting {
            get {
                return ResourceManager.GetString("ServantAborting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servant &quot;{0}&quot; was started..
        /// </summary>
        public static string ServantStarted {
            get {
                return ResourceManager.GetString("ServantStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servant &quot;{0}&quot; was starting..
        /// </summary>
        public static string ServantStarting {
            get {
                return ResourceManager.GetString("ServantStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servant &quot;{0}&quot; was stopped..
        /// </summary>
        public static string ServantStopped {
            get {
                return ResourceManager.GetString("ServantStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servant &quot;{0}&quot; was stopping..
        /// </summary>
        public static string ServantStopping {
            get {
                return ResourceManager.GetString("ServantStopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server was initialized..
        /// </summary>
        public static string ServerInitialized {
            get {
                return ResourceManager.GetString("ServerInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server version {0} on {1} ({2}) is initializing.
        ///Copyright © 2008-2009 Takeshi KIRIYA, XSpect Project &lt;takeshik@users.sf.net&gt;, All rights reserved.
        ///This program comes with ABSOLUTELY NO WARRANTY and this is free software, and you are welcome to redistribute it under certain conditions; access &lt;http://metatweet.sf.net/license&gt; for details..
        /// </summary>
        public static string ServerInitializing {
            get {
                return ResourceManager.GetString("ServerInitializing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server was paused..
        /// </summary>
        public static string ServerPaused {
            get {
                return ResourceManager.GetString("ServerPaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server is pausing..
        /// </summary>
        public static string ServerPausing {
            get {
                return ResourceManager.GetString("ServerPausing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server was resumed..
        /// </summary>
        public static string ServerResumed {
            get {
                return ResourceManager.GetString("ServerResumed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server is resuming..
        /// </summary>
        public static string ServerResuming {
            get {
                return ResourceManager.GetString("ServerResuming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server was started..
        /// </summary>
        public static string ServerStarted {
            get {
                return ResourceManager.GetString("ServerStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server is starting..
        /// </summary>
        public static string ServerStarting {
            get {
                return ResourceManager.GetString("ServerStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server was stopped..
        /// </summary>
        public static string ServerStopped {
            get {
                return ResourceManager.GetString("ServerStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet Server is stopping..
        /// </summary>
        public static string ServerStopping {
            get {
                return ResourceManager.GetString("ServerStopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet is terminated..
        /// </summary>
        public static string ServerTerminated {
            get {
                return ResourceManager.GetString("ServerTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MetaTweet is terminating..
        /// </summary>
        public static string ServerTerminating {
            get {
                return ResourceManager.GetString("ServerTerminating", resourceCulture);
            }
        }
    }
}
